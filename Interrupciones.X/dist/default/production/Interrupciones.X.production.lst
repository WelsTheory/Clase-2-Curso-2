

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Dec 23 19:50:51 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _RCONbits	set	4048
    53  0000                     _INTCON2bits	set	4081
    54  0000                     _INTCON3bits	set	4080
    55  0000                     _INTCONbits	set	4082
    56  0000                     _TRISBbits	set	3987
    57  0000                     _LATDbits	set	3980
    58  0000                     _TRISD	set	3989
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63  0000F8                     __pcinit:
    64                           	callstack 0
    65  0000F8                     start_initialization:
    66                           	callstack 0
    67  0000F8                     __initialization:
    68                           	callstack 0
    69  0000F8                     end_of_initialization:
    70                           	callstack 0
    71  0000F8                     __end_of__initialization:
    72                           	callstack 0
    73  0000F8  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    74  0000FA  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    75  0000FC  0100               	movlb	0
    76  0000FE  EF49  F000         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81  000001                     ??_INT0_ISR:
    82  000001                     
    83                           ; 1 bytes @ 0x0
    84  000001                     	ds	1
    85  000002                     ??_INT1_ISR:
    86                           
    87                           ; 1 bytes @ 0x1
    88  000002                     	ds	1
    89  000003                     ??_main:
    90                           
    91                           ; 1 bytes @ 0x2
    92  000003                     	ds	2
    93                           
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 12 in file "Programa_principal.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, status,0, cstack
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   113 ;;      Params:         0       0       0       0       0       0       0       0       0
   114 ;;      Locals:         0       0       0       0       0       0       0       0       0
   115 ;;      Temps:          2       0       0       0       0       0       0       0       0
   116 ;;      Totals:         2       0       0       0       0       0       0       0       0
   117 ;;Total ram usage:        2 bytes
   118 ;; Hardware stack levels required when called:    3
   119 ;; This function calls:
   120 ;;		_INT_Init
   121 ;; This function is called by:
   122 ;;		Startup code after reset
   123 ;; This function uses a non-reentrant model
   124 ;;
   125                           
   126                           	psect	text0
   127  000092                     __ptext0:
   128                           	callstack 0
   129  000092                     _main:
   130                           	callstack 28
   131  000092                     
   132                           ;Programa_principal.c: 13:     TRISD = 0x00;
   133  000092  0E00               	movlw	0
   134  000094  6E95               	movwf	149,c	;volatile
   135  000096                     
   136                           ;Programa_principal.c: 14:     INT_Init();
   137  000096  EC6F  F000         	call	_INT_Init	;wreg free
   138  00009A                     l725:
   139                           
   140                           ;Programa_principal.c: 16:         LATDbits.LATD2 = ~LATDbits.LATD2;
   141  00009A  B48C               	btfsc	140,2,c	;volatile
   142  00009C  EF52  F000         	goto	u11
   143  0000A0  EF55  F000         	goto	u10
   144  0000A4                     u11:
   145  0000A4  0E01               	movlw	1
   146  0000A6  EF56  F000         	goto	u16
   147  0000AA                     u10:
   148  0000AA  0E00               	movlw	0
   149  0000AC                     u16:
   150  0000AC  0AFF               	xorlw	255
   151  0000AE  6E03               	movwf	??_main^0,c
   152  0000B0  4603               	rlncf	??_main^0,f,c
   153  0000B2  4603               	rlncf	??_main^0,f,c
   154  0000B4  508C               	movf	140,w,c	;volatile
   155  0000B6  1803               	xorwf	??_main^0,w,c
   156  0000B8  0BFB               	andlw	-5
   157  0000BA  1803               	xorwf	??_main^0,w,c
   158  0000BC  6E8C               	movwf	140,c	;volatile
   159  0000BE                     
   160                           ;Programa_principal.c: 17:         _delay((unsigned long)((500)*(20000000UL/4000.0)));
   161  0000BE  0E0D               	movlw	13
   162  0000C0  6E04               	movwf	(??_main+1)^0,c
   163  0000C2  0EAF               	movlw	175
   164  0000C4  6E03               	movwf	??_main^0,c
   165  0000C6  0EB6               	movlw	182
   166  0000C8                     u67:
   167  0000C8  2EE8               	decfsz	wreg,f,c
   168  0000CA  D7FE               	bra	u67
   169  0000CC  2E03               	decfsz	??_main^0,f,c
   170  0000CE  D7FC               	bra	u67
   171  0000D0  2E04               	decfsz	(??_main+1)^0,f,c
   172  0000D2  D7FA               	bra	u67
   173  0000D4  D000               	nop2	
   174  0000D6  EF4D  F000         	goto	l725
   175  0000DA  EF13  F000         	goto	start
   176  0000DE                     __end_of_main:
   177                           	callstack 0
   178                           
   179 ;; *************** function _INT_Init *****************
   180 ;; Defined at:
   181 ;;		line 6 in file "Int_Libreria.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		None
   190 ;; Tracked objects:
   191 ;;		On entry : 0/0
   192 ;;		On exit  : 0/0
   193 ;;		Unchanged: 0/0
   194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   195 ;;      Params:         0       0       0       0       0       0       0       0       0
   196 ;;      Locals:         0       0       0       0       0       0       0       0       0
   197 ;;      Temps:          0       0       0       0       0       0       0       0       0
   198 ;;      Totals:         0       0       0       0       0       0       0       0       0
   199 ;;Total ram usage:        0 bytes
   200 ;; Hardware stack levels used:    1
   201 ;; Hardware stack levels required when called:    2
   202 ;; This function calls:
   203 ;;		Nothing
   204 ;; This function is called by:
   205 ;;		_main
   206 ;; This function uses a non-reentrant model
   207 ;;
   208                           
   209                           	psect	text1
   210  0000DE                     __ptext1:
   211                           	callstack 0
   212  0000DE                     _INT_Init:
   213                           	callstack 28
   214  0000DE                     
   215                           ;Int_Libreria.c: 7:     TRISBbits.RB0 = 1;
   216  0000DE  8093               	bsf	147,0,c	;volatile
   217                           
   218                           ;Int_Libreria.c: 8:     TRISBbits.RB1 = 1;
   219  0000E0  8293               	bsf	147,1,c	;volatile
   220                           
   221                           ;Int_Libreria.c: 9:     INTCONbits.INT0IE = 1;
   222  0000E2  88F2               	bsf	242,4,c	;volatile
   223                           
   224                           ;Int_Libreria.c: 10:     INTCONbits.INT0IF = 0;
   225  0000E4  92F2               	bcf	242,1,c	;volatile
   226                           
   227                           ;Int_Libreria.c: 11:     INTCON3bits.INT1E = 1;
   228  0000E6  86F0               	bsf	240,3,c	;volatile
   229                           
   230                           ;Int_Libreria.c: 12:     INTCON3bits.INT1F = 0;
   231  0000E8  90F0               	bcf	240,0,c	;volatile
   232                           
   233                           ;Int_Libreria.c: 13:     INTCON2bits.INTEDG0 = 0;
   234  0000EA  9CF1               	bcf	241,6,c	;volatile
   235                           
   236                           ;Int_Libreria.c: 14:     INTCON2bits.INTEDG1 = 0;
   237  0000EC  9AF1               	bcf	241,5,c	;volatile
   238                           
   239                           ;Int_Libreria.c: 15:     INTCON3bits.INT1IP = 1;
   240  0000EE  8CF0               	bsf	240,6,c	;volatile
   241                           
   242                           ;Int_Libreria.c: 16:     RCONbits.IPEN = 1;
   243  0000F0  8ED0               	bsf	208,7,c	;volatile
   244                           
   245                           ;Int_Libreria.c: 17:     INTCONbits.GIEL = 1;
   246  0000F2  8CF2               	bsf	242,6,c	;volatile
   247                           
   248                           ;Int_Libreria.c: 18:     INTCONbits.GIEH = 1;
   249  0000F4  8EF2               	bsf	242,7,c	;volatile
   250  0000F6  0012               	return		;funcret
   251  0000F8                     __end_of_INT_Init:
   252                           	callstack 0
   253                           
   254 ;; *************** function _INT1_ISR *****************
   255 ;; Defined at:
   256 ;;		line 32 in file "Int_Libreria.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		None
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   270 ;;      Params:         0       0       0       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0       0       0
   272 ;;      Temps:          1       0       0       0       0       0       0       0       0
   273 ;;      Totals:         1       0       0       0       0       0       0       0       0
   274 ;;Total ram usage:        1 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; Hardware stack levels required when called:    1
   277 ;; This function calls:
   278 ;;		Nothing
   279 ;; This function is called by:
   280 ;;		Interrupt level 1
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	intcodelo
   285  000018                     __pintcodelo:
   286                           	callstack 0
   287  000018                     _INT1_ISR:
   288                           	callstack 28
   289                           
   290                           ;incstack = 0
   291  000018  8005               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   292  00001A  CFE0 F002          	movff	bsr,??_INT1_ISR
   293  00001E  C002  FFE0         	movff	??_INT1_ISR,bsr
   294  000022  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   295  000024  0010               	retfie	
   296  000026                     __end_of_INT1_ISR:
   297                           	callstack 0
   298                           
   299 ;; *************** function _INT0_ISR *****************
   300 ;; Defined at:
   301 ;;		line 21 in file "Int_Libreria.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0       0       0       0       0
   317 ;;      Temps:          1       0       0       0       0       0       0       0       0
   318 ;;      Totals:         1       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        1 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; This function calls:
   322 ;;		Nothing
   323 ;; This function is called by:
   324 ;;		Interrupt level 2
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           	psect	intcode
   329  000008                     __pintcode:
   330                           	callstack 0
   331  000008                     _INT0_ISR:
   332                           	callstack 28
   333                           
   334                           ;incstack = 0
   335  000008  8205               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   336  00000A  ED15  F000         	call	int_func,f	;refresh shadow registers
   337                           
   338                           	psect	intcode_body
   339  00002A                     __pintcode_body:
   340                           	callstack 28
   341  00002A                     int_func:
   342                           	callstack 28
   343  00002A  0006               	pop		; remove dummy address from shadow register refresh
   344  00002C                     
   345                           ;Int_Libreria.c: 22:     if(INTCONbits.INT0IF){
   346  00002C  A2F2               	btfss	242,1,c	;volatile
   347  00002E  EF1B  F000         	goto	i2u2_41
   348  000032  EF1D  F000         	goto	i2u2_40
   349  000036                     i2u2_41:
   350  000036  EF2E  F000         	goto	i2l735
   351  00003A                     i2u2_40:
   352  00003A                     
   353                           ;Int_Libreria.c: 23:         LATDbits.LATD0 = ~LATDbits.LATD0;
   354  00003A  B08C               	btfsc	140,0,c	;volatile
   355  00003C  EF22  F000         	goto	i2u3_41
   356  000040  EF25  F000         	goto	i2u3_40
   357  000044                     i2u3_41:
   358  000044  0E01               	movlw	1
   359  000046  EF26  F000         	goto	i2u3_46
   360  00004A                     i2u3_40:
   361  00004A  0E00               	movlw	0
   362  00004C                     i2u3_46:
   363  00004C  0AFF               	xorlw	255
   364  00004E  6E01               	movwf	??_INT0_ISR^0,c
   365  000050  508C               	movf	140,w,c	;volatile
   366  000052  1801               	xorwf	??_INT0_ISR^0,w,c
   367  000054  0BFE               	andlw	-2
   368  000056  1801               	xorwf	??_INT0_ISR^0,w,c
   369  000058  6E8C               	movwf	140,c	;volatile
   370  00005A                     
   371                           ;Int_Libreria.c: 24:         INTCONbits.INT0IF = 0;
   372  00005A  92F2               	bcf	242,1,c	;volatile
   373  00005C                     i2l735:
   374                           
   375                           ;Int_Libreria.c: 26:     if(INTCON3bits.INT1F){
   376  00005C  A0F0               	btfss	240,0,c	;volatile
   377  00005E  EF33  F000         	goto	i2u4_41
   378  000062  EF35  F000         	goto	i2u4_40
   379  000066                     i2u4_41:
   380  000066  EF47  F000         	goto	i2l38
   381  00006A                     i2u4_40:
   382  00006A                     
   383                           ;Int_Libreria.c: 27:         LATDbits.LATD1 = ~LATDbits.LATD1;
   384  00006A  B28C               	btfsc	140,1,c	;volatile
   385  00006C  EF3A  F000         	goto	i2u5_41
   386  000070  EF3D  F000         	goto	i2u5_40
   387  000074                     i2u5_41:
   388  000074  0E01               	movlw	1
   389  000076  EF3E  F000         	goto	i2u5_46
   390  00007A                     i2u5_40:
   391  00007A  0E00               	movlw	0
   392  00007C                     i2u5_46:
   393  00007C  0AFF               	xorlw	255
   394  00007E  6E01               	movwf	??_INT0_ISR^0,c
   395  000080  4601               	rlncf	??_INT0_ISR^0,f,c
   396  000082  508C               	movf	140,w,c	;volatile
   397  000084  1801               	xorwf	??_INT0_ISR^0,w,c
   398  000086  0BFD               	andlw	-3
   399  000088  1801               	xorwf	??_INT0_ISR^0,w,c
   400  00008A  6E8C               	movwf	140,c	;volatile
   401  00008C                     
   402                           ;Int_Libreria.c: 28:         INTCON3bits.INT1F = 0;
   403  00008C  90F0               	bcf	240,0,c	;volatile
   404  00008E                     i2l38:
   405  00008E  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   406  000090  0011               	retfie		f
   407  000092                     __end_of_INT0_ISR:
   408                           	callstack 0
   409  0000                     
   410                           	psect	rparam
   411  0000                     
   412                           	psect	temp
   413  000005                     btemp:
   414                           	callstack 0
   415  000005                     	ds	1
   416  0000                     int$flags	set	btemp
   417  0000                     wtemp8	set	btemp+1
   418  0000                     ttemp5	set	btemp+1
   419  0000                     ttemp6	set	btemp+4
   420  0000                     ttemp7	set	btemp+8
   421                           
   422                           	psect	idloc
   423                           
   424                           ;Config register IDLOC0 @ 0x200000
   425                           ;	unspecified, using default values
   426  200000                     	org	2097152
   427  200000  FF                 	db	255
   428                           
   429                           ;Config register IDLOC1 @ 0x200001
   430                           ;	unspecified, using default values
   431  200001                     	org	2097153
   432  200001  FF                 	db	255
   433                           
   434                           ;Config register IDLOC2 @ 0x200002
   435                           ;	unspecified, using default values
   436  200002                     	org	2097154
   437  200002  FF                 	db	255
   438                           
   439                           ;Config register IDLOC3 @ 0x200003
   440                           ;	unspecified, using default values
   441  200003                     	org	2097155
   442  200003  FF                 	db	255
   443                           
   444                           ;Config register IDLOC4 @ 0x200004
   445                           ;	unspecified, using default values
   446  200004                     	org	2097156
   447  200004  FF                 	db	255
   448                           
   449                           ;Config register IDLOC5 @ 0x200005
   450                           ;	unspecified, using default values
   451  200005                     	org	2097157
   452  200005  FF                 	db	255
   453                           
   454                           ;Config register IDLOC6 @ 0x200006
   455                           ;	unspecified, using default values
   456  200006                     	org	2097158
   457  200006  FF                 	db	255
   458                           
   459                           ;Config register IDLOC7 @ 0x200007
   460                           ;	unspecified, using default values
   461  200007                     	org	2097159
   462  200007  FF                 	db	255
   463                           
   464                           	psect	config
   465                           
   466                           ;Config register CONFIG1L @ 0x300000
   467                           ;	PLL Prescaler Selection bits
   468                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   469                           ;	System Clock Postscaler Selection bits
   470                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   471                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   472                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   473  300000                     	org	3145728
   474  300000  00                 	db	0
   475                           
   476                           ;Config register CONFIG1H @ 0x300001
   477                           ;	Oscillator Selection bits
   478                           ;	FOSC = HS, HS oscillator (HS)
   479                           ;	Fail-Safe Clock Monitor Enable bit
   480                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   481                           ;	Internal/External Oscillator Switchover bit
   482                           ;	IESO = OFF, Oscillator Switchover mode disabled
   483  300001                     	org	3145729
   484  300001  0C                 	db	12
   485                           
   486                           ;Config register CONFIG2L @ 0x300002
   487                           ;	Power-up Timer Enable bit
   488                           ;	PWRT = ON, PWRT enabled
   489                           ;	Brown-out Reset Enable bits
   490                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   491                           ;	Brown-out Reset Voltage bits
   492                           ;	BORV = 3, Minimum setting 2.05V
   493                           ;	USB Voltage Regulator Enable bit
   494                           ;	VREGEN = OFF, USB voltage regulator disabled
   495  300002                     	org	3145730
   496  300002  18                 	db	24
   497                           
   498                           ;Config register CONFIG2H @ 0x300003
   499                           ;	Watchdog Timer Enable bit
   500                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   501                           ;	Watchdog Timer Postscale Select bits
   502                           ;	WDTPS = 32768, 1:32768
   503  300003                     	org	3145731
   504  300003  1E                 	db	30
   505                           
   506                           ; Padding undefined space
   507  300004                     	org	3145732
   508  300004  FF                 	db	255
   509                           
   510                           ;Config register CONFIG3H @ 0x300005
   511                           ;	CCP2 MUX bit
   512                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   513                           ;	PORTB A/D Enable bit
   514                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   515                           ;	Low-Power Timer 1 Oscillator Enable bit
   516                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   517                           ;	MCLR Pin Enable bit
   518                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   519  300005                     	org	3145733
   520  300005  81                 	db	129
   521                           
   522                           ;Config register CONFIG4L @ 0x300006
   523                           ;	Stack Full/Underflow Reset Enable bit
   524                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   525                           ;	Single-Supply ICSP Enable bit
   526                           ;	LVP = OFF, Single-Supply ICSP disabled
   527                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   528                           ;	ICPRT = OFF, ICPORT disabled
   529                           ;	Extended Instruction Set Enable bit
   530                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   531                           ;	Background Debugger Enable bit
   532                           ;	DEBUG = 0x1, unprogrammed default
   533  300006                     	org	3145734
   534  300006  80                 	db	128
   535                           
   536                           ; Padding undefined space
   537  300007                     	org	3145735
   538  300007  FF                 	db	255
   539                           
   540                           ;Config register CONFIG5L @ 0x300008
   541                           ;	Code Protection bit
   542                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   543                           ;	Code Protection bit
   544                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   545                           ;	Code Protection bit
   546                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   547                           ;	Code Protection bit
   548                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   549  300008                     	org	3145736
   550  300008  0F                 	db	15
   551                           
   552                           ;Config register CONFIG5H @ 0x300009
   553                           ;	Boot Block Code Protection bit
   554                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   555                           ;	Data EEPROM Code Protection bit
   556                           ;	CPD = OFF, Data EEPROM is not code-protected
   557  300009                     	org	3145737
   558  300009  C0                 	db	192
   559                           
   560                           ;Config register CONFIG6L @ 0x30000A
   561                           ;	Write Protection bit
   562                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   563                           ;	Write Protection bit
   564                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   565                           ;	Write Protection bit
   566                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   567                           ;	Write Protection bit
   568                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   569  30000A                     	org	3145738
   570  30000A  0F                 	db	15
   571                           
   572                           ;Config register CONFIG6H @ 0x30000B
   573                           ;	Configuration Register Write Protection bit
   574                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   575                           ;	Boot Block Write Protection bit
   576                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   577                           ;	Data EEPROM Write Protection bit
   578                           ;	WRTD = OFF, Data EEPROM is not write-protected
   579  30000B                     	org	3145739
   580  30000B  E0                 	db	224
   581                           
   582                           ;Config register CONFIG7L @ 0x30000C
   583                           ;	Table Read Protection bit
   584                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   585                           ;	Table Read Protection bit
   586                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   587                           ;	Table Read Protection bit
   588                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   589                           ;	Table Read Protection bit
   590                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   591  30000C                     	org	3145740
   592  30000C  0F                 	db	15
   593                           
   594                           ;Config register CONFIG7H @ 0x30000D
   595                           ;	Boot Block Table Read Protection bit
   596                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   597  30000D                     	org	3145741
   598  30000D  40                 	db	64
   599                           tosu	equ	0xFFF
   600                           tosh	equ	0xFFE
   601                           tosl	equ	0xFFD
   602                           stkptr	equ	0xFFC
   603                           pclatu	equ	0xFFB
   604                           pclath	equ	0xFFA
   605                           pcl	equ	0xFF9
   606                           tblptru	equ	0xFF8
   607                           tblptrh	equ	0xFF7
   608                           tblptrl	equ	0xFF6
   609                           tablat	equ	0xFF5
   610                           prodh	equ	0xFF4
   611                           prodl	equ	0xFF3
   612                           indf0	equ	0xFEF
   613                           postinc0	equ	0xFEE
   614                           postdec0	equ	0xFED
   615                           preinc0	equ	0xFEC
   616                           plusw0	equ	0xFEB
   617                           fsr0h	equ	0xFEA
   618                           fsr0l	equ	0xFE9
   619                           wreg	equ	0xFE8
   620                           indf1	equ	0xFE7
   621                           postinc1	equ	0xFE6
   622                           postdec1	equ	0xFE5
   623                           preinc1	equ	0xFE4
   624                           plusw1	equ	0xFE3
   625                           fsr1h	equ	0xFE2
   626                           fsr1l	equ	0xFE1
   627                           bsr	equ	0xFE0
   628                           indf2	equ	0xFDF
   629                           postinc2	equ	0xFDE
   630                           postdec2	equ	0xFDD
   631                           preinc2	equ	0xFDC
   632                           plusw2	equ	0xFDB
   633                           fsr2h	equ	0xFDA
   634                           fsr2l	equ	0xFD9
   635                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMRAM     2     2      0
                           _INT_Init
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT1_ISR                                             1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_Init

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      4       4       1        4.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Dec 23 19:50:51 2020

                     l31 00F6                       u10 00AA                       u11 00A4  
                     u16 00AC                       u67 00C8                       bsr 000FE0  
                    l721 0092                      l723 0096                      l725 009A  
                    l719 00DE                      l727 00BE                      wreg 000FE8  
                   i1l43 001E                     i2l38 008E                     _main 0092  
                   btemp 0005                     start 0026             ___param_bank 000000  
       __end_of_INT0_ISR 0092         __end_of_INT1_ISR 0026                    ?_main 0001  
                  i2l731 003A                    i2l733 005A                    i2l735 005C  
                  i2l737 006A                    i2l729 002C                    i2l739 008C  
       __end_of_INT_Init 00F8                    _TRISD 000F95                    ttemp5 0006  
                  ttemp6 0009                    ttemp7 000D                    wtemp8 0006  
        __initialization 00F8             __end_of_main 00DE                   ??_main 0003  
          __activetblptr 000000                   i2u2_40 003A                   i2u2_41 0036  
                 i2u3_40 004A                   i2u3_41 0044                   i2u3_46 004C  
                 i2u4_40 006A                   i2u4_41 0066                   i2u5_40 007A  
                 i2u5_41 0074                   i2u5_46 007C               __accesstop 0060  
__end_of__initialization 00F8                ?_INT0_ISR 0001                ?_INT1_ISR 0001  
          ___rparam_used 000001                ?_INT_Init 0001           __pcstackCOMRAM 0001  
             ??_INT0_ISR 0001               ??_INT1_ISR 0002               ??_INT_Init 0003  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00F8  
                __ramtop 0800                  __ptext0 0092                  __ptext1 00DE  
         __pintcode_body 002A     end_of_initialization 00F8                  int_func 002A  
              _TRISBbits 000F93        __size_of_INT0_ISR 008A        __size_of_INT1_ISR 000E  
      __size_of_INT_Init 001A      start_initialization 00F8                __pintcode 0008  
            __pintcodelo 0018                 _INT0_ISR 0008                 _INT1_ISR 0018  
               _LATDbits 000F8C                 _INT_Init 00DE                 _RCONbits 000FD0  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 004C                 int$flags 0005  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
